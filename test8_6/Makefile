#=======================================================
# 1. 设置交叉编译前缀与内核源码路径
#=======================================================
CROSS_COMPILE ?= aarch64-linux-gnu-
KERNEL_SRC    ?= ../../build 
ARCH          ?= arm64

#=======================================================
# 2. 定义内核模块编译规则
#=======================================================
# Linux kbuild 机制：将 mydriver.o 编译成最终的 mydriver.ko
test86-objs := test86.o


#=======================================================
# 4. 总目标：同时编译内核模块 + 可执行文件
#=======================================================
all: modules

#-------------------------------------------------------
# 4.1 编译内核模块
#-------------------------------------------------------
modules:
	$(MAKE) -C $(KERNEL_SRC) \
		ARCH=$(ARCH) \
		CROSS_COMPILE=$(CROSS_COMPILE) \
		M=$(PWD) \
		modules

#-------------------------------------------------------
# 5. 清理目标
#-------------------------------------------------------
clean:
	$(MAKE) -C $(KERNEL_SRC) \
		ARCH=$(ARCH) \
		CROSS_COMPILE=$(CROSS_COMPILE) \
		M=$(PWD) \
		clean

.PHONY: all modules clean